<?xml version="1.0" encoding="utf-8"?>
<!--
/*
**
** Copyright 2010, The Android Open Source Project
**
** Licensed under the Apache License, Version 2.0 (the "License");
** you may not use this file except in compliance with the License.
** You may obtain a copy of the License at
**
**     http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "AS IS" BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
*/
-->

<resources>

<!--
    <declare-styleable name="KeyboardTheme">
        <!dashdash Keyboard style dashdash>
        <attr name="keyboardStyle" format="reference" />
        <!dashdash KeyboardView style dashdash>
        <attr name="keyboardViewStyle" format="reference" />
        <!dashdash MainKeyboardView style dashdash>
        <attr name="mainKeyboardViewStyle" format="reference" />
        <!dashdash EmojiPalettesView style dashdash>
        <attr name="emojiPalettesViewStyle" format="reference" />
        <!dashdash MoreKeysKeyboard style dashdash>
        <attr name="moreKeysKeyboardStyle" format="reference" />
        <!dashdash MoreKeysKeyboardView style dashdash>
        <attr name="moreKeysKeyboardViewStyle" format="reference" />
        <!dashdash MoreKeysKeyboardView style for action key dashdash>
        <attr name="moreKeysKeyboardViewForActionStyle" format="reference" />
        <!dashdash Suggestions strip style dashdash>
        <attr name="suggestionStripViewStyle" format="reference" />
        <!dashdash Suggestion word style dashdash>
        <attr name="suggestionWordStyle" format="reference" />
    </declare-styleable>

    <declare-styleable name="KeyboardView">
        <!dashdash Background image for the key. This image needs to be a {@link StateListDrawable},
             with the following possible states: normal, pressed, checkable, checkable+pressed,
             checkable+checked, checkable+checked+pressed. dashdash>
        <attr name="keyBackground" format="reference" />
        <!dashdash Background image for the functional key. This image needs to be a
             {@link StateListDrawable}, with the following possible states: normal, pressed. dashdash>
        <attr name="functionalKeyBackground" format="reference" />
        <!dashdash Background image for the spacebar.  This image needs to be a
             {@link StateListDrawable}, with the following possible states: normal, pressed. dashdash>
        <attr name="spacebarBackground" format="reference" />
        <attr name="spacebarIconWidthRatio" format="float" />
        <!dashdash Right padding of hint letter to the edge of the key.dashdash>
        <attr name="keyHintLetterPadding" format="dimension" />
        <!dashdash Popup hint letter stringdashdash>
        <attr name="keyPopupHintLetter" format="string" />
        <!dashdash Bottom padding of popup hint letter to the edge of the key.dashdash>
        <attr name="keyPopupHintLetterPadding" format="dimension" />
        <!dashdash Right padding of shifted letter hint to the edge of the key.dashdash>
        <attr name="keyShiftedLetterHintPadding" format="dimension" />
        <!dashdash Blur radius of key text shadow. dashdash>
        <attr name="keyTextShadowRadius" format="float" />

        <!dashdash Key preview background states dashdash>
        <attr name="state_left_edge" format="boolean" />
        <attr name="state_right_edge" format="boolean" />
        <attr name="state_has_morekeys" format="boolean" />

        <!dashdash Amount to offset the touch Y coordinate by, for bias correction. dashdash>
        <attr name="verticalCorrection" format="dimension" />
    </declare-styleable>

    <declare-styleable name="MainKeyboardView">
        <!dashdash Size of the text for spacebar language label, in the proportion of key height. dashdash>
        <attr name="languageOnSpacebarTextRatio" format="fraction" />
        <attr name="languageOnSpacebarTextColor" format="color" />
        <attr name="languageOnSpacebarTextShadowRadius" format="float" />
        <attr name="languageOnSpacebarTextShadowColor" format="color" />
        <!dashdash Fadeout animator for spacebar language label. dashdash>
        <attr name="languageOnSpacebarFinalAlpha" format="integer" />
        <attr name="languageOnSpacebarFadeoutAnimator" format="reference" />
        <!dashdash Fadeout and fadein animator for altCodeWhileTyping keys. dashdash>
        <attr name="altCodeKeyWhileTypingFadeoutAnimator" format="reference" />
        <attr name="altCodeKeyWhileTypingFadeinAnimator" format="reference" />
        <!dashdash Key detection hysteresis distance. dashdash>
        <attr name="keyHysteresisDistance" format="dimension" />
        <!dashdash Key detection hysteresis distance for shift/symbols sliding input. dashdash>
        <attr name="keyHysteresisDistanceForSlidingModifier" format="dimension" />
        <!dashdash Touch noise threshold time in millisecond dashdash>
        <attr name="touchNoiseThresholdTime" format="integer" />
        <!dashdash Touch noise threshold distance in millimeter dashdash>
        <attr name="touchNoiseThresholdDistance" format="dimension" />
        <!dashdash Enable key selection by dragging finger dashdash>
        <attr name="keySelectionByDraggingFinger" format="boolean" />
        <attr name="slidingKeyInputPreviewColor" format="color" />
        <attr name="slidingKeyInputPreviewWidth" format="dimension" />
        <attr name="slidingKeyInputPreviewBodyRatio" format="integer" />
        <attr name="slidingKeyInputPreviewShadowRatio" format="integer" />
        <!dashdash Key repeat start timeout dashdash>
        <attr name="keyRepeatStartTimeout" format="integer" />
        <!dashdash Key repeat interval in millisecond. dashdash>
        <attr name="keyRepeatInterval" format="integer" />
        <!dashdash Long press timeout of shift key to shift lock in millisecond. dashdash>
        <attr name="longPressShiftLockTimeout" format="integer" />
        <!dashdash Ignore special key timeout while typing in millisecond. dashdash>
        <attr name="ignoreAltCodeKeyTimeout" format="integer" />
        <!dashdash Background resource for key press feedback.dashdash>
        <attr name="keyPreviewBackground" format="reference" />
        <!dashdash Vertical offset of the key press feedback from the key. dashdash>
        <attr name="keyPreviewOffset" format="dimension" />
        <!dashdash Height of the key press feedback popup. dashdash>
        <attr name="keyPreviewHeight" format="dimension" />
        <!dashdash TODO: consolidate key preview linger timeout with the key preview animation parameters. dashdash>
        <!dashdash Delay after key releasing and key press feedback dismissing in millisecond dashdash>
        <attr name="keyPreviewLingerTimeout" format="integer" />
        <!dashdash Key preview show up animator dashdash>
        <attr name="keyPreviewShowUpAnimator" format="reference" />
        <!dashdash Key preview dismiss animator dashdash>
        <attr name="keyPreviewDismissAnimator" format="reference" />
        <!dashdash Layout resource for more keys keyboard dashdash>
        <attr name="moreKeysKeyboardLayout" format="reference" />
        <!dashdash Layout resource for more keys keyboard of action key dashdash>
        <attr name="moreKeysKeyboardForActionLayout" format="reference" />
        <attr name="backgroundDimAlpha" format="integer" />
        <!dashdash More keys keyboard will shown at touched point. dashdash>
        <attr name="showMoreKeysKeyboardAtTouchedPoint" format="boolean" />
        <!dashdash Minimum distance between gesture trail sampling points. dashdash>
        <attr name="gestureTrailMinSamplingDistance" format="dimension" />
        <!dashdash Maximum angular threshold between gesture trail interpolation segments in degree. dashdash>
        <attr name="gestureTrailMaxInterpolationAngularThreshold" format="integer" />
        <!dashdash Maximum distance threshold between gesture trail interpolation segments. dashdash>
        <attr name="gestureTrailMaxInterpolationDistanceThreshold" format="dimension" />
        <!dashdash Maximum number of gesture trail interpolation segments. dashdash>
        <attr name="gestureTrailMaxInterpolationSegments" format="integer" />
        <!dashdash Delay after gesture trail starts fading out in millisecond. dashdash>
        <attr name="gestureTrailFadeoutStartDelay" format="integer" />
        <!dashdash Duration while gesture trail is fading out in millisecond. dashdash>
        <attr name="gestureTrailFadeoutDuration" format="integer" />
        <!dashdash Interval of updating gesture trail in millisecond. dashdash>
        <attr name="gestureTrailUpdateInterval" format="integer" />
        <attr name="gestureTrailColor" format="color" />
        <attr name="gestureTrailStartWidth" format="dimension" />
        <attr name="gestureTrailEndWidth" format="dimension" />
        <attr name="gestureTrailBodyRatio" format="integer" />
        <attr name="gestureTrailShadowRatio" format="integer" />
        <!dashdash Delay after gesture input and gesture floating preview text dismissing in millisecond dashdash>
        <attr name="gestureFloatingPreviewTextLingerTimeout" format="integer" />
        <!dashdash Attributes for GestureFloatingPreviewText dashdash>
        <attr name="gestureFloatingPreviewTextSize" format="dimension" />
        <attr name="gestureFloatingPreviewTextColor" format="color" />
        <attr name="gestureFloatingPreviewTextOffset" format="dimension" />
        <attr name="gestureFloatingPreviewColor" format="color" />
        <attr name="gestureFloatingPreviewHorizontalPadding" format="dimension" />
        <attr name="gestureFloatingPreviewVerticalPadding" format="dimension" />
        <attr name="gestureFloatingPreviewRoundRadius" format="dimension" />
        <!dashdash Static threshold for gesture after fast typing (msec) dashdash>
        <attr name="gestureStaticTimeThresholdAfterFastTyping" format="integer" />
        <!dashdash Static threshold for starting gesture detection (keyWidth%/sec) dashdash>
        <attr name="gestureDetectFastMoveSpeedThreshold" format="fraction" />
        <!dashdash Dynamic threshold for gesture after fast typing (msec) dashdash>
        <attr name="gestureDynamicThresholdDecayDuration" format="integer" />
        <!dashdash Time based threshold values for gesture detection (msec) dashdash>
        <attr name="gestureDynamicTimeThresholdFrom" format="integer" />
        <attr name="gestureDynamicTimeThresholdTo" format="integer" />
        <!dashdash Distance based threshold values for gesture detection (keyWidth%/sec) dashdash>
        <attr name="gestureDynamicDistanceThresholdFrom" format="fraction" />
        <attr name="gestureDynamicDistanceThresholdTo" format="fraction" />
        <!dashdash Parameter for gesture sampling (keyWidth%/sec) dashdash>
        <attr name="gestureSamplingMinimumDistance" format="fraction" />
        <!dashdash Parameters for gesture recognition (msec) and (keyWidth%/sec) dashdash>
        <attr name="gestureRecognitionMinimumTime" format="integer" />
        <attr name="gestureRecognitionUpdateTime" format="integer" />
        <attr name="gestureRecognitionSpeedThreshold" format="fraction" />
        <!dashdash Suppress showing key preview duration after batch input in millisecond dashdash>
        <attr name="suppressKeyPreviewAfterBatchInputDuration" format="integer" />
    </declare-styleable>

    <declare-styleable name="MoreKeysKeyboardView">
        <attr name="divider" format="reference" />
    </declare-styleable>

    <declare-styleable name="EmojiPalettesView">
        <attr name="categoryIndicatorEnabled" format="boolean" />
        <attr name="categoryIndicatorDrawable" format="reference" />
        <attr name="categoryIndicatorBackground" format="reference" />
        <attr name="categoryPageIndicatorColor" format="color" />
        <attr name="categoryPageIndicatorBackground" format="color" />
        <attr name="iconEmojiRecentsTab" format="reference" />
        <attr name="iconEmojiCategory1Tab" format="reference" />
        <attr name="iconEmojiCategory2Tab" format="reference" />
        <attr name="iconEmojiCategory3Tab" format="reference" />
        <attr name="iconEmojiCategory4Tab" format="reference" />
        <attr name="iconEmojiCategory5Tab" format="reference" />
        <attr name="iconEmojiCategory6Tab" format="reference" />
    </declare-styleable>

    <declare-styleable name="SuggestionStripView">
        <attr name="suggestionStripOptions" format="integer">
            <!dashdash This should be aligned with SuggestionStripLayoutHelper.AUTO_CORRECT_* and etc. dashdash>
            <flag name="autoCorrectBold" value="0x01" />
            <flag name="autoCorrectUnderline" value="0x02" />
            <flag name="validTypedWordBold" value="0x04" />
        </attr>
        <attr name="colorValidTypedWord" format="color" />
        <attr name="colorTypedWord" format="color" />
        <attr name="colorAutoCorrect" format="color" />
        <attr name="colorSuggested" format="color" />
        <attr name="alphaObsoleted" format="fraction" />
        <attr name="suggestionsCountInStrip" format="integer" />
        <attr name="centerSuggestionPercentile" format="fraction" />
        <attr name="maxMoreSuggestionsRow" format="integer" />
        <attr name="minMoreSuggestionsWidth" format="float" />
    </declare-styleable>

    <declare-styleable name="Keyboard">
        <attr name="themeId" format="enum">
            <!dashdash This should be aligned with KeyboardTheme.THEME_ID_*. dashdash>
            <enum name="ICS" value="0" />
            <enum name="KLP" value="2" />
            <enum name="LXXLight" value="3" />
            <enum name="LXXDark" value="4" />
        </attr>
        <!dashdash Touch position correction dashdash>
        <attr name="touchPositionCorrectionData" format="reference" />
        <!dashdash Keyboard top, bottom, left, right edges paddings, in propotion of keyboard height. dashdash>
        <attr name="keyboardTopPadding" format="fraction" />
        <attr name="keyboardBottomPadding" format="fraction" />
        <attr name="keyboardLeftPadding" format="fraction" />
        <attr name="keyboardRightPadding" format="fraction" />
        <!dashdash Default height of a row (key height + vertical gap), in pixels or in the proportion of
             keyboard height. dashdash>
        <attr name="rowHeight" format="dimension|fraction" />
        <!dashdash Default horizontal gap between keys, in the proportion of keyboard width. dashdash>
        <attr name="horizontalGap" format="fraction" />
        <!dashdash Default vertical gap between rows of keys, in the proportion of keyboard height. dashdash>
        <attr name="verticalGap" format="fraction" />
        <!dashdash More keys keyboard layout template dashdash>
        <attr name="moreKeysTemplate" format="reference" />
        <!dashdash Icon set for key top and key preview.
             These should be aligned with KeyboardIconsSet.NAMES_AND_ATTR_IDS[] dashdash>
        <attr name="iconShiftKey" format="reference" />
        <attr name="iconDeleteKey" format="reference" />
        <attr name="iconSettingsKey" format="reference" />
        <attr name="iconSpaceKey" format="reference" />
        <attr name="iconEnterKey" format="reference" />
        <attr name="iconGoKey" format="reference" />
        <attr name="iconSearchKey" format="reference" />
        <attr name="iconSendKey" format="reference" />
        <attr name="iconNextKey" format="reference" />
        <attr name="iconDoneKey" format="reference" />
        <attr name="iconPreviousKey" format="reference" />
        <attr name="iconTabKey" format="reference" />
        <attr name="iconShortcutKey" format="reference" />
        <attr name="iconSpaceKeyForNumberLayout" format="reference" />
        <attr name="iconShiftKeyShifted" format="reference" />
        <attr name="iconShortcutKeyDisabled" format="reference" />
        <attr name="iconLanguageSwitchKey" format="reference" />
        <attr name="iconZwnjKey" format="reference" />
        <attr name="iconZwjKey" format="reference" />
        <attr name="iconImeKey" format="reference" />
        <attr name="iconEmojiActionKey" format="reference" />
        <attr name="iconEmojiNormalKey" format="reference" />
    </declare-styleable>

    <declare-styleable name="Keyboard_GridRows">
        <attr name="codesArray" format="reference" />
        <attr name="textsArray" format="reference" />
    </declare-styleable> -->

    <declare-styleable name="Keyboard_Key">
<!--
        <!dashdash The alternate unicode value that this key outputs while typing.
             Code value represented in hexadecimal prefixed with "0x" or code value reference using
             "!code/<code_name>" notation. dashdash>
        <attr name="altCode" format="string" /> -->
        <!-- The keys to display in the more keys keyboard. -->
        <attr name="moreKeys" format="string" />

        <!-- The keys to display in the more keys keyboard in addition to moreKeys.
             The additional more keys are inserted at the '%' markers in the moreKeys if any.
             They are inserted at the head of moreKeys if none.
             If there are remaining entries of additionalMoreKeys even after all '%' markers have
             been replaced, those remaining entries are appended at the end of moreKeys. -->
        <attr name="additionalMoreKeys" format="string" />
<!--        <!dashdash Maximum column of more keys keyboard dashdash>
        <attr name="maxMoreKeysColumn" format="integer" />
        <attr name="backgroundType" format="enum">
            <!dashdash This should be aligned with Key.BACKGROUND_TYPE_* dashdash>
            <enum name="empty" value="0" />
            <enum name="normal" value="1" />
            <enum name="functional" value="2" />
            <enum name="stickyOff" value="3" />
            <enum name="stickyOn" value="4" />
            <enum name="action" value="5" />
            <enum name="spacebar" value="6" />
        </attr>
        <!dashdash The key action flags. dashdash>
        <attr name="keyActionFlags" format="integer">
            <!dashdash This should be aligned with Key.ACTION_FLAGS_* dashdash>
            <flag name="isRepeatable" value="0x01" />
            <flag name="noKeyPreview" value="0x02" />
            <flag name="altCodeWhileTyping" value="0x04" />
            <flag name="enableLongPress" value="0x08" />
        </attr> -->
        <!-- The label, icon to display on the key. And code, outputText of the key. -->
        <attr name="keySpec" format="string" />
        <!-- The hint label to display on the key in conjunction with the label. -->
        <attr name="keyHintLabel" format="string" />
<!--        <!dashdash The vertical adjustment of key hint label in proportion to its height. dashdash>
        <attr name="keyHintLabelVerticalAdjustment" format="fraction" />
        <!dashdash The key label flags. dashdash>
        <attr name="keyLabelFlags" format="integer">
            <!dashdash This should be aligned with Key.LABEL_FLAGS__* dashdash>
            <flag name="alignHintLabelToBottom" value="0x02" />
            <flag name="alignIconToBottom" value="0x04" />
            <flag name="alignLabelOffCenter" value="0x08" />
            <flag name="fontNormal" value="0x10" />
            <flag name="fontMonoSpace" value="0x20" />
            <flag name="fontDefault" value="0x30" />
            <flag name="followKeyLargeLetterRatio" value="0x40" />
            <flag name="followKeyLetterRatio" value="0x80" />
            <flag name="followKeyLabelRatio" value="0xC0" />
            <flag name="followKeyHintLabelRatio" value="0x140" />
            <flag name="hasPopupHint" value="0x200" />
            <flag name="hasShiftedLetterHint" value="0x400" />
            <flag name="hasHintLabel" value="0x800" />
            <flag name="autoXScale" value="0x4000" />
            <!dashdash The autoScale value implies autoXScale bit on to optimize scaling code path. dashdash>
            <flag name="autoScale" value="0xc000" />
            <!dashdash If true, character case of code, altCode, moreKeys, keyOutputText, keyLabel,
                 or keyHintLabel will never be subject to change. dashdash>
            <flag name="preserveCase" value="0x10000" />
            <!dashdash If true, use keyShiftedLetterHintActivatedColor for the shifted letter hint and
                 keyTextInactivatedColor for the primary key top label. dashdash>
            <flag name="shiftedLetterActivated" value="0x20000" />
            <!dashdash If true, use EditorInfo.actionLabel for the key label. dashdash>
            <flag name="fromCustomActionLabel" value="0x40000" />
            <!dashdash If true, use functionalTextColor instead of ketTextColor to drawing the label on
                 the key dashdash>
            <flag name="followFunctionalTextColor" value="0x80000" />
            <!dashdash Keep aspect ratio of key background. dashdash>
            <flag name="keepBackgroundAspectRatio" value="0x100000" />
            <!dashdash If true, disable keyHintLabel. dashdash>
            <flag name="disableKeyHintLabel" value="0x40000000" />
            <!dashdash If true, disable additionalMoreKeys. dashdash>
            <flag name="disableAdditionalMoreKeys" value="0x80000000" />
        </attr>
        <!dashdash The icon for disabled key dashdash>
        <attr name="keyIconDisabled" format="string" />-->
        <!-- The key style to specify a set of key attributes defined by <key_style/> -->
        <attr name="keyStyle" format="string" />
        <!-- Visual insets, in the proportion of keyboard width. dashdash>
        <attr name="visualInsetsLeft" format="fraction" />
        <attr name="visualInsetsRight" format="fraction" />
        <!dashdash Width of the key, in the proportion of keyboard width.
             If the value is fillRight, the actual key width will be determined to fill out the
             area up to the right edge of the keyboard. dashdash>
        <!dashdash This should be aligned with KeyboardBuilder.Row.KEYWIDTH_* dashdash> -->
        <attr name="keyWidth" format="fraction|enum">
            <enum name="fillRight" value="-1" />
        </attr>
        <!-- The X-coordinate of upper right corner of this key including horizontal gap, in the
             proportion of keyboard width.
             If the value is negative, the origin is the right edge of the keyboard. dashdash>
        <attr name="keyXPos" format="fraction" />

        <!dashdash Key top visual attributes dashdash>
        <attr name="keyTypeface" format="enum">
            <!dashdash This should be aligned with Typeface.NORMAL etc. dashdash>
            <enum name="normal" value="0" />
            <enum name="bold" value="1" />
            <enum name="italic" value="2" />
            <enum name="boldItalic" value="3" />
        </attr>
        <!dashdash Size of the text for one letter keys. If specified as fraction, the text size is
             measured in the proportion of key height. dashdash>
        <attr name="keyLetterSize" format="dimension|fraction" />
        <!dashdash Size of the text for keys with multiple letters. If specified as fraction, the text
             size is measured in the proportion of key height. dashdash>
        <attr name="keyLabelSize" format="dimension|fraction" />
        <!dashdash Large size of the text for one letter keys, in the proportion of key height. dashdash>
        <attr name="keyLargeLetterRatio" format="fraction" />
        <!dashdash Size of the text for hint letter (= one character hint label), in the proportion of
             key height. dashdash>
        <attr name="keyHintLetterRatio" format="fraction" />
        <!dashdash Size of the text for hint label, in the proportion of key height. dashdash>
        <attr name="keyHintLabelRatio" format="fraction" />
        <!dashdash Size of the text for shifted letter hint, in the proportion of key height. dashdash>
        <attr name="keyShiftedLetterHintRatio" format="fraction" />
        <!dashdash The label's horizontal offset to the center of the key. Negative is to left and
             positive is to right. The value is in proportion of the width of
             TypefaceUtils.KEY_LABEL_REFERENCE_CHAR. dashdash>
        <attr name="keyLabelOffCenterRatio" format="fraction" />
        <!dashdash The hint label's horizontal offset to the center of the key. Negative is to left and
             positive is to right. The value is in proportion of the width of
             TypefaceUtils.KEY_LABEL_REFERENCE_CHAR. dashdash>
        <attr name="keyHintLabelOffCenterRatio" format="fraction" />
        <!dashdash Color to use for the label in a key. dashdash>
        <attr name="keyTextColor" format="color" />
        <attr name="keyTextShadowColor" format="color" />
        <!dashdash Color to use for the label in a key when in inactivated state. dashdash>
        <attr name="keyTextInactivatedColor" format="color" />
        <!dashdash Color to use for the label in a key that has followFunctionalTextColor keyLabelFlags. dashdash>
        <attr name="functionalTextColor" format="color" />
        <!dashdash Key hint letter (= one character hint label) color dashdash>
        <attr name="keyHintLetterColor" format="color" />
        <!dashdash Key hint label color dashdash>
        <attr name="keyHintLabelColor" format="color" />
        <!dashdash Shifted letter hint colors dashdash>
        <attr name="keyShiftedLetterHintInactivatedColor" format="color" />
        <attr name="keyShiftedLetterHintActivatedColor" format="color" />

        <!dashdash Key preview visual parameters dashdash>
        <!dashdash The text color for key press feedback. dashdash>
        <attr name="keyPreviewTextColor" format="color" />
        <!dashdash Size of the text for key press feedback popup, in the proportion of key height. dashdash>
        <attr name="keyPreviewTextRatio" format="fraction" /> -->
    </declare-styleable>

    <declare-styleable name="Keyboard_Include">
        <attr name="keyboardLayout" format="reference" />
    </declare-styleable>

<!--    <declare-styleable name="Keyboard_Case">
        <attr name="keyboardLayoutSet" format="string" />
        <!dashdash This should be aligned with KeyboardLayoutSet_Element's elementName. dashdash>
        <attr name="keyboardLayoutSetElement" format="enum|string">
            <enum name="alphabet" value="0" />
            <enum name="alphabetManualShifted" value="1" />
            <enum name="alphabetAutomaticShifted" value="2" />
            <enum name="alphabetShiftLocked" value="3" />
            <enum name="alphabetShiftLockShifted" value="4" />
            <enum name="symbols" value="5" />
            <enum name="symbolsShifted" value="6"  />
            <enum name="phone" value="7"  />
            <enum name="phoneSymbols" value="8"  />
            <enum name="number" value="9"  />
            <enum name="emojiRecents" value="10" />
            <enum name="emojiCategory1" value="11" />
            <enum name="emojiCategory2" value="12" />
            <enum name="emojiCategory3" value="13" />
            <enum name="emojiCategory4" value="14" />
            <enum name="emojiCategory5" value="15" />
            <enum name="emojiCategory6" value="16" />
        </attr>
        <!dashdash This should be aligned with Keyboard.themeId and KeyboardTheme.THEME_ID_* dashdash>
        <attr name="keyboardTheme" format="enum|string">
            <enum name="ICS" value="0" />
            <enum name="KLP" value="2" />
            <enum name="LXXLight" value="3" />
            <enum name="LXXDark" value="4" />
        </attr>
        <!dashdash This should be aligned with KeyboardId.MODE_* dashdash>
        <attr name="mode" format="enum|string">
            <enum name="text" value="0" />
            <enum name="url" value="1" />
            <enum name="email" value="2" />
            <enum name="im" value="3" />
            <enum name="phone" value="4" />
            <enum name="number" value="5" />
        </attr>
        <attr name="navigateNext" format="boolean" />
        <attr name="navigatePrevious" format="boolean" />
        <attr name="passwordInput" format="boolean" />
        <attr name="clobberSettingsKey" format="boolean" />
        <attr name="hasShortcutKey" format="boolean" />
        <attr name="languageSwitchKeyEnabled" format="boolean" />
        <attr name="isMultiLine" format="boolean" />
        <attr name="imeAction" format="enum">
            <!dashdash This should be aligned with EditorInfo.IME_ACTION_* dashdash>
            <enum name="actionUnspecified" value="0" />
            <enum name="actionNone" value="1" />
            <enum name="actionGo" value="2" />
            <enum name="actionSearch" value="3" />
            <enum name="actionSend" value="4" />
            <enum name="actionNext" value="5" />
            <enum name="actionDone" value="6" />
            <enum name="actionPrevious" value="7" />
            <!dashdash  This should be aligned with KeyboardId.IME_ACTION_* dashdash>
            <enum name="actionCustomLabel" value="0x100" />
        </attr>
        <attr name="isIconDefined" format="string" />
        <attr name="localeCode" format="string" />
        <attr name="languageCode" format="string" />
        <attr name="countryCode" format="string" />
    </declare-styleable>

    <declare-styleable name="Keyboard_KeyStyle">
        <attr name="styleName" format="string" />
        <attr name="parentStyle" format="string" />
    </declare-styleable> -->

    <declare-styleable name="KeyboardLayoutSet_Element">
        <!-- This should be aligned with KeyboardId.ELEMENT_* -->
        <attr name="elementName" format="enum">
            <enum name="alphabet" value="0" />
            <enum name="alphabetManualShifted" value="1" />
            <enum name="alphabetAutomaticShifted" value="2" />
            <enum name="alphabetShiftLocked" value="3" />
            <enum name="alphabetShiftLockShifted" value="4" />
            <enum name="symbols" value="5" />
            <enum name="symbolsShifted" value="6"  />
            <enum name="phone" value="7"  />
            <enum name="phoneSymbols" value="8"  />
            <enum name="number" value="9"  />
            <enum name="emojiRecents" value="10" />
            <enum name="emojiCategory1" value="11" />
            <enum name="emojiCategory2" value="12" />
            <enum name="emojiCategory3" value="13" />
            <enum name="emojiCategory4" value="14" />
            <enum name="emojiCategory5" value="15" />
            <enum name="emojiCategory6" value="16" />
        </attr>
        <attr name="elementKeyboard" format="reference"/>
        <!-- Enable proximity characters correction. Disabled by default. -->
        <attr name="enableProximityCharsCorrection" format="boolean" />
    </declare-styleable>


    <declare-styleable name="KeyboardLayoutSet_Feature">
        <!-- This should be aligned with ScriptUtils.SCRIPT_* -->
        <attr name="supportedScript" format="enum">
            <enum name="arabic" value="0" />
            <enum name="armenian" value="1" />
            <enum name="bengali" value="2" />
            <enum name="cyrillic" value="3" />
            <enum name="devanagari" value="4" />
            <enum name="georgian" value="5" />
            <enum name="greek" value="6" />
            <enum name="hebrew" value="7" />
            <enum name="kannada" value="8" />
            <enum name="khmer" value="9" />
            <enum name="lao" value="10" />
            <enum name="latin" value="11" />
            <enum name="malayalam" value="12" />
            <enum name="myanmar" value="13" />
            <enum name="sinhala" value="14" />
            <enum name="tamil" value="15" />
            <enum name="telugu" value="16" />
            <enum name="thai" value="17" />
        </attr>
    </declare-styleable>

<!--    <declare-styleable name="SeekBarDialogPreference">
        <attr name="maxValue" format="integer" />
        <attr name="minValue" format="integer" />
        <attr name="stepValue" format="integer" />
    </declare-styleable>-->
</resources>
